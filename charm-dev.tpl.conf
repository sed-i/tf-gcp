#cloud-config

write_files:
- path: /etc/systemd/system/node-exporter.service
  content: |
    [Unit]
    Description=Node exporter
    After=network.target

    [Service]
    Type=simple
    Restart=always
    RestartSec=5
    ExecStartPre=wget https://github.com/prometheus/node_exporter/releases/download/v1.3.1/node_exporter-1.3.1.linux-amd64.tar.gz -P /run
    ExecStartPre=tar -xzvf /run/node_exporter-1.3.1.linux-amd64.tar.gz -C /run
    ExecStartPre=mv /run/node_exporter-1.3.1.linux-amd64/node_exporter /usr/bin
    ExecStart=/usr/bin/node_exporter \
                --web.disable-exporter-metrics \
                --collector.disable-defaults \
                --collector.diskstats \
                --collector.cpu \
                --collector.filesystem \
                --collector.meminfo

package_update: true

packages:
- sysstat
- python3-pip
- jq
- tox
- zsh
- fzf

snap:
  commands:
  - snap install lxd --channel=${LXD_CHANNEL}
  - snap refresh lxd --channel=${LXD_CHANNEL}
  - snap install --classic juju --channel=${JUJU_CHANNEL}
  - snap install --classic microk8s --channel=${MICROK8S_CHANNEL}
  - snap alias microk8s.kubectl kubectl
  - snap install charmcraft --classic --channel=${CHARMCRAFT_CHANNEL}
  - snap install yq
  - snap refresh

runcmd:
- DEBIAN_FRONTEND=noninteractive apt -y upgrade

- |
  # disable swap
  sysctl -w vm.swappiness=0
  echo "vm.swappiness = 0" | tee -a /etc/sysctl.conf
  swapoff -a

- |
  # disable unnecessary services
  systemctl disable man-db.timer man-db.service --now
  systemctl disable apport.service apport-autoreport.service  --now
  systemctl disable apt-daily.service apt-daily.timer --now
  systemctl disable apt-daily-upgrade.service apt-daily-upgrade.timer --now
  systemctl disable unattended-upgrades.service --now
  systemctl disable motd-news.service motd-news.timer --now
  systemctl disable bluetooth.target --now
  systemctl disable ua-messaging.service ua-messaging.timer --now
  systemctl disable ua-timer.timer ua-timer.service --now
  systemctl disable systemd-tmpfiles-clean.timer --now

  # start services
  systemctl daemon-reload
  sed -i 's/ENABLED="false"/ENABLED="true"/' /etc/default/sysstat
  systemctl restart sysstat sysstat-collect.timer sysstat-summary.timer
  systemctl start node-exporter.service

- |
  # apt cleanup
  apt remove -y landscape-client landscape-common
  apt-get autoremove -y

- |
  # oh-my-zsh + juju plugin
  sudo -u ubuntu sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
  sudo -u ubuntu git clone https://github.com/zsh-users/zsh-autosuggestions.git ~ubuntu/.oh-my-zsh/custom/plugins/zsh-autosuggestions
  sudo -u ubuntu git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~ubuntu/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
  sudo -u ubuntu sed -i 's/plugins=(git)/plugins=(fzf git zsh-autosuggestions zsh-syntax-highlighting virtualenv colored-man-pages juju colorize)/g' ~ubuntu/.zshrc

- |
  set -eux
  # setup microk8s and bootstrap
  adduser ubuntu microk8s
  microk8s status --wait-ready
  microk8s enable dns:$(grep nameserver /run/systemd/resolve/resolv.conf | awk '{print $2}')
  microk8s.enable storage
  microk8s.enable ingress
  # wait for addons to become available
  microk8s.kubectl rollout status deployments/hostpath-provisioner -n kube-system -w --timeout=600s
  microk8s.kubectl rollout status deployments/coredns -n kube-system -w --timeout=600s
  microk8s.kubectl rollout status daemonsets/nginx-ingress-microk8s-controller -n ingress -w --timeout=600s
  microk8s.enable metrics-server
  microk8s.kubectl rollout status deployment.apps/metrics-server -n kube-system -w --timeout=600s

  # To prevent metallb from failing with the following error:
  # The connection to the server 127.0.0.1:16443 was refused - did you specify the right host or port?
  # the metallb addon must be enabled only after the dns addon was rolled out
  # https://github.com/ubuntu/microk8s/issues/2770#issuecomment-984346287
  IPADDR=$(ip -4 -j route | jq -r '.[] | select(.dst | contains("default")) | .prefsrc')
  microk8s.enable metallb:$IPADDR-$IPADDR
  microk8s.kubectl rollout status daemonset.apps/speaker -n metallb-system -w --timeout=600s

  # workaround for
  # ERROR resolving microk8s credentials: max duration exceeded: secret for service account "juju-credential-microk8s" not found
  # Ref: https://github.com/charmed-kubernetes/actions-operator/blob/main/src/bootstrap/index.ts
  microk8s.kubectl create serviceaccount test-sa
  timeout 600 sh -c "until microk8s.kubectl get secrets | grep -q test-sa-token-; do sleep 5; done"
  microk8s.kubectl delete serviceaccount test-sa

- |
  set -eux
  # prep juju
  sudo -u ubuntu juju bootstrap --no-gui microk8s uk8s
  sudo -u ubuntu juju add-model --config logging-config="<root>=WARNING; unit=DEBUG" --config update-status-hook-interval="60m" charm-dev

- |
  # initialize LXD
  lxd waitready
  sudo -u ubuntu lxd init --auto
  sudo chmod a+wr /var/snap/lxd/common/lxd/unix.socket
  sudo -u ubuntu lxc network set lxdbr0 ipv6.address none
  adduser ubuntu lxd

